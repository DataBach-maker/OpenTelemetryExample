# OpenTelemetry Tracing with Scala and Spark
A sample application demonstrating custom OpenTelemetry tracing integration with Scala and Apache Spark.

## What This Does
The application creates a simple Spark DataFrame, counts its rows, and traces the entire process using custom OpenTelemetry spans. Perfect for learning how to integrate observability into Spark applications.
The traces are exported to a directory called otel-data into a file named telemetry.json.

## Prerequisites
# Required Tools

* JDK 11 (Spark-compatible version)
* Docker Desktop
* Windows users: WSL (Windows Subsystem for Linux)

## Network Requirements
This project downloads images and libraries from the internet during build. Ensure your network allows:

* Docker Hub access for container images
* Maven Central access for dependencies

If you're behind a corporate firewall, you may need to configure proxy settings for Docker and your build tools.
## Quick Start

* Clone the repository
* Start the application:
* docker-compose logs otel-collector
* docker-compose up


## Platform Compatibility
While developed on Windows, this application should run on any platform with Docker support (Linux, macOS, Windows).
Troubleshooting

* Build failures: Check your internet connection and firewall settings
* Java version issues: Ensure JDK 11 is installed and set as your default Java version
* Docker issues on Windows: Verify WSL and Docker Desktop are properly configured